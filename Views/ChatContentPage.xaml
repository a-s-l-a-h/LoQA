<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:models="clr-namespace:LoQA.Models"
             x:Class="LoQA.Views.ChatContentPage"
             Title="LoQA"
             BackgroundColor="{StaticResource PageBackgroundColor}">

    <NavigationPage.TitleView>
        <Label x:Name="StatusLabel" TextColor="{StaticResource SecondaryTextColor}" VerticalTextAlignment="Center" HorizontalTextAlignment="Center"/>
    </NavigationPage.TitleView>

    <Grid RowDefinitions="*, Auto" Padding="10" ColumnSpacing="10">

        <!-- Message Display Area (always visible if there are messages) -->
        <CollectionView Grid.Row="0" x:Name="ChatMessagesView" Margin="5,0" ItemsSource="{Binding CurrentMessages}" ItemsUpdatingScrollMode="KeepLastItemInView">
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="models:ChatMessageViewModel">
                    <Grid Padding="5,10">
                        <Border BackgroundColor="{Binding BackgroundColor}"
                                Padding="15,10"
                                StrokeThickness="0"
                                MaximumWidthRequest="300"
                                HorizontalOptions="{Binding HorizontalAlignment}">
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="15"/>
                            </Border.StrokeShape>
                            <Label Text="{Binding Content}" TextColor="{Binding TextColor}" LineBreakMode="WordWrap"/>
                        </Border>
                    </Grid>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <!-- Empty View (shown when there are no messages and no model) -->
        <VerticalStackLayout Grid.Row="0"
                             VerticalOptions="Center" 
                             HorizontalOptions="Center" 
                             Spacing="20"
                             IsVisible="{Binding ShowInitialPromptPanel}">
            <Label Text="No Model Initialized"
                   FontSize="Large"
                   FontAttributes="Bold"
                   HorizontalTextAlignment="Center"
                   TextColor="{StaticResource PrimaryTextColor}"/>
            <Label Text="Please select a model to begin chatting."
                   HorizontalTextAlignment="Center"
                   TextColor="{StaticResource SecondaryTextColor}"/>
        </VerticalStackLayout>


        <!-- Container for all bottom panels -->
        <Grid Grid.Row="1" Margin="5,10,0,0">

            <!-- Panel 1: Initial State / No Model Loaded -->
            <!-- FIX: Changed to HorizontalStackLayout for side-by-side buttons -->
            <HorizontalStackLayout Spacing="15"
                                 HorizontalOptions="Center"
                                 IsVisible="{Binding ShowInitialPromptPanel}">

                <Button x:Name="LoadDefaultButton"
                        Text="Load Default Model"
                        Clicked="LoadDefaultButton_Clicked"/>
                <Button x:Name="NavigateToModelsButton"
                        Text="Choose a Model"
                        Clicked="NavigateToModelsButton_Clicked"/>
            </HorizontalStackLayout>

            <!-- Panel 2: Normal Chat Input -->
            <Grid ColumnDefinitions="*, Auto" ColumnSpacing="10"
                  IsVisible="{Binding ShowInputPanel}">
                <!-- FIX 2: Added BackgroundColor to ensure text is visible on Android -->
                <Editor Grid.Column="0" x:Name="PromptEditor" 
                        Placeholder="Enter your prompt here..." AutoSize="TextChanges" 
                        TextColor="{StaticResource PrimaryTextColor}" PlaceholderColor="{StaticResource SecondaryTextColor}"
                        BackgroundColor="{StaticResource SidebarBackgroundColor}"
                        IsEnabled="{Binding IsGenerating, Converter={StaticResource InverseBoolConverter}}"/>
                <Button Grid.Column="1" Text="➤" IsVisible="{Binding IsGenerating, Converter={StaticResource InverseBoolConverter}}" Clicked="SendButton_Clicked" Style="{StaticResource CircleButton}"/>
                <Button Grid.Column="1" Text="■" IsVisible="{Binding IsGenerating}" Clicked="StopButton_Clicked" Style="{StaticResource CircleButton}" BackgroundColor="{StaticResource DestructiveColor}"/>
            </Grid>

            <!-- Panel 3: History Preview with Model Loaded -->
            <Button x:Name="LoadHistoryButton"
                    Text="Load History &amp; Continue Chat"
                    IsEnabled="{Binding IsLoadingHistory, Converter={StaticResource InverseBoolConverter}}"
                    Clicked="LoadHistoryButton_Clicked"
                    IsVisible="{Binding ShowLoadHistoryPanel}"/>

            <!-- Panel 4: History Preview WITHOUT Model Loaded -->
            <!-- FIX: Changed to HorizontalStackLayout for side-by-side buttons -->
            <VerticalStackLayout Spacing="15" IsVisible="{Binding ShowHistoryNeedsModelPanel}">
                <Label Text="Load a model to continue this conversation."
                       HorizontalTextAlignment="Center"
                       TextColor="{StaticResource SecondaryTextColor}"/>
                <HorizontalStackLayout Spacing="15" HorizontalOptions="Center">
                    <Button Text="Choose a Model"
                            Clicked="NavigateToModelsButton_Clicked"/>
                    <Button Text="Load Default Model"
                            Clicked="LoadDefaultButton_Clicked"/>
                </HorizontalStackLayout>
            </VerticalStackLayout>

        </Grid>

        <!-- Global Activity Indicator -->
        <!-- FIX 1: Changed binding to the new ShowGlobalSpinner property -->
        <ActivityIndicator Grid.Row="0" Grid.RowSpan="2" HorizontalOptions="Center" VerticalOptions="Center" Color="{StaticResource PrimaryAccentColor}"
                             IsVisible="{Binding ShowGlobalSpinner}"
                             IsRunning="{Binding ShowGlobalSpinner}" />
    </Grid>
</ContentPage>